#!/bin/bash
set -e
declare -- PRG0 PRG PRGDIR
PRG0=$(readlink -en -- "${0:-}") || exit 1
PRG=${PRG0##*/}
if ((UID)); then
  id "${USER:-}" | grep -qs '(sudo)' \
    || { echo >&2 "$PRG: Requires root."; exit 1; }
  "$PRG0" "$@"
  exit $?
fi

PRGDIR=${PRG0%/*}
cd "$PRGDIR"

declare -- version
version=$(cat ../.version)

main() {
  local input input_orig output
  local projectname
  local tmp

  input_orig=../README.md
  input=README.md
  output=dv2.1
  rm -f "$input" "$output" "$output".gz \
        ../"$output".gz \
        /usr/local/man/man1/"$output".gz \
        /usr/local/man/man1/dv2.gz

  projectname="DéjàVu-DéjàVu Chatbot/Scriptbot"

  cp -p "$input_orig" "$input"
  ( echo "% DV2(1) ${projectname} | Version ${version}"
    echo "% Gary Dean, garydean@okusi.id"
    echo "% $(date +'%b %Y')"
    echo
    echo "# NAME"
    echo "**${projectname}**"
    tail -n +7 "$input_orig"
  ) >"$input"
  tmp="$(cat "$input")"
  tmp="${tmp//$'\n'##/$'\n'#}" # downgrade headers
  echo "$tmp" > "$input"

  # Convert the GitHub Markup file to a manpage
  pandoc  -f gfm+backtick_code_blocks \
      -t man "$input" \
      -f markdown-smart \
      -o "$output"
  pandoc "$input" -f markdown-smart -s -t man -o "$output"

  cp "$output" /usr/local/man/man1
  gzip /usr/local/man/man1/"$output"
  mandb -sq

  chown sysadmin: "$output"
  gzip "$output"
  chown sysadmin: "$output".gz
  cp -p "$output".gz ../
}
main "$@"
#fin
