#!/bin/bash
#!shellcheck disable=SC0000
# DéjàVu-DéjàVu GPT Chatbot/Scriptbot
# Linux terminal interface for OpenAI GPTs
# Gary Dean garydean@yatti.id
# https://github.com/Open-Technology-Foundation/dejavu2
set -euo pipefail
declare -- _ent_0=$(readlink -fn -- "$0") || _ent_0=''
declare -- PRG=${_ent_0##*/}
declare -- PRGDIR=${_ent_0%/*}
declare -- PRGNAME="DéjàVu2"
declare -- Version=$(cat "$PRGDIR/.version")

declare -- SHAREDIR=/usr/share/dejavu2
declare -- REPOSITORY='https://github.com/Open-Technology-Foundation/dejavu2.git'

declare -i doApt=1 doUpgrade=0

dv2.install.help() {
cat <<-EOT
  Name    : $PRGNAME vs $Version Installation
          :
  Script  : $PRG
          :
  Desc    : Installation Script for $PRGNAME GPT Terminal Chatbot/Scriptbot
          : 
          : - Requires root/sudo to install.
          : - apt update and upgrade will be executed before
          :   installation of python 3, pip and git.
          : - ~/.bashrc and /etc/bash.bashrc will be modified
          :   to include openai environment variables. 
          : - program files are stored in $SHAREDIR
          : - executable 'dejavu2' is installed in /usr/local/bin/
          : - a symlink 'dv2' is created for executable 'dejavu'
          :   in /usr/local/bin, if this does not already exist.
          : 
  Synopsis: $PRG [-vqaVh]
          :
  Options : -v|--verbose   Verbose on (default)
          : -q|--quiet     Verbose off. 
          :                If environment key OPENAI_API_KEY
          :                has already been set you will not 
          :                be prompted to input it.
          : -a|--no-apt    Do not execute apt during installation.
          : -u|--upgrade   Upgrade $PRGNAME from git repository.
          : -V|--version   Print $PRGNAME version.
          :
  Requires: python 3, pip, git, openai API key/s, root access for 
          : installation.
          :
  See Also: https://openai.com/api/
          : $REPOSITORY
EOT
}

dv2.install() {
  if ((UID)); then
    if [[ " $(id -Gn) " != *" sudo "* ]]; then
      echo 2> "Installation of $PRGNAME requires root access."
      dv2.install.help
      exit
    fi
  fi

  cd "$PRGDIR"
  
  local verbose_=1 quiet_='' tempdir
  while (($#)); do case "$1" in
    -u|--upgrade|--update)
                    doUpgrade=1 ;;
    -a|--no-apt)    doApt=0 ;;
    -v|--verbose)   verbose_=1; quiet_='' ;;
    -q|--quiet)     verbose_=0; quiet_='qq' ;;
    -V|--version)   echo "$PRGNAME vs $Version"; return 0 ;;
    -h|--help)      dv2.install.help; return 0 ;;
    -N|--no-op)     ;;
    -[uavqVhN]*)    #shellcheck disable=SC2046 # de-aggregate aggregated short options
                    set -- '' $(printf -- "-%c " $(grep -o . <<<"${1:1}")) "${@:2}";;
    -?|--*)         echo 2> "Invalid option '$1'" ;;
    *)              echo 2> "Invalid argument '$1'" ;;
  esac; shift; done

  if ((doUpgrade)); then
    local -- tempdir="/tmp/$PRG-upgrade-$RANDOM"
    git clone "$REPOSITORY" "$tempdir" || exit
    exec "$tempdir/$PRG" \
        -"$( ((verbose_)) && echo -n 'v' || echo -n 'q')" \
        -"$( ((doApt)) && echo -n 'a' || echo -n 'N')"
    exit
  fi

  ((verbose_)) && { echo "$PRGNAME vs $Version"; echo ''; }

  local -- key
  key="${OPENAI_API_KEY:-}"
  if [[ -z $key ]] || ((verbose_)); then
    read -rep "Your openai API Key: " -i "$key" key
    if [[ $key == '' ]]; then
      echo 2> "You will require an API key from openai.com to run $PRG"
      exit
    fi 
    echo
  fi
  OPENAI_API_KEY="$key"; export OPENAI_API_KEY

  key="${OPENAI_ORGANIZATION_ID:-}"
  if ((verbose_)); then
    read -rep "Your openai Organization ID (if required): " -i "$key" key
    echo
  fi
  OPENAI_ORGANIZATION_ID="$key"; export OPENAI_ORGANIZATION_ID

  if ((doApt)); then
    sudo apt update -q"$quiet_"
    sudo apt upgrade -q"$quiet_"
    sudo apt install -q"$quiet_" python3 pip git bc pandoc shellcheck
  fi

  [[ -d "$SHAREDIR" ]] || sudo mkdir -m 0775 -p "$SHAREDIR"
  cd "$SHAREDIR"

  set +e
  mkdir -m 0775 -p "$SHAREDIR"/{agents,doc,.sys_libs,etc}
  cd "$PRGDIR" || exit 1
  sudo rsync -al agents/* "$SHAREDIR"/agents/
  sudo rsync -al .sys_libs/* "$SHAREDIR"/.sys_libs/
  sudo rsync -al etc/* "$SHAREDIR"/etc/
  sudo cp -p doc/makedoc "$SHAREDIR"/doc/
  sudo chmod 775 "$PRGDIR"/dv2
  sudo cp -p dv2 dv2.install dv2.1.gz LICENSE README.md .sys_conf .sys_lib .sys_version .version "$SHAREDIR"/
  set -e
  
  cd /usr/local/bin || { sudo mkdir -p -m 755 /usr/local/bin; cd /usr/local/bin; }
  sudo rm -f /usr/local/bin/dv2 /usr/local/bin/dejavu2
  sudo ln -s --force "$SHAREDIR"/dv2 dv2
  sudo ln -s --force "$SHAREDIR"/dv2 dejavu2

  # manpages
  cd "$SHAREDIR"
  [[ -d  /usr/local/share/man/man1 ]] \
    || sudo mkdir -p -m 0755 /usr/local/share/man/man1
  sudo rm -f /usr/local/man/man1/dv2.1.gz /usr/local/man/man1/dv2.1.gz
  sudo cp -p "$SHAREDIR"/dv2.1.gz /usr/local/man/man1/dv2.1.gz
  sudo cp -p "$SHAREDIR"/dv2.1.gz /usr/local/man/man1/dejavu2.1.gz
  sudo mandb -sq

  # default config agent
  sudo rsync -a etc/default/dv2.conf /etc/default/

  # ~/.bashrc /etc/bash.bashrc
  local -- tmpfile file
  tmpfile="/tmp/$PRG-$RANDOM"
  for file in "$HOME/.bashrc" /etc/bash.bashrc; do
    ((verbose_)) && echo "Modifying '$file'"
    if [[ ! -f "$file" ]]; then
      echo "# This file created by $PRG ($PRGNAME)" > "$file"
      chmod 664 "$file"
    fi
    grep -v '^[[:blank:]]*OPENAI_API_KEY=\|^[[:blank:]]*OPENAI_ORGANIZATION_ID=\|^[[:blank:]]*export OPENAI_' "$file" \
        >"$tmpfile"
    ( echo "OPENAI_API_KEY=\"$OPENAI_API_KEY\"" 
      echo "export OPENAI_API_KEY"
      if [[ -n $OPENAI_ORGANIZATION_ID ]]; then
        echo "OPENAI_ORGANIZATION_ID=\"$OPENAI_ORGANIZATION_ID\""
        echo "export OPENAI_ORGANIZATION_ID" 
      fi  
    ) >>"$tmpfile"
    sudo chmod --reference="$file" "$tmpfile"
    sudo chown --reference="$file" "$tmpfile"
    sudo mv --backup "$tmpfile" "$file" \
        || { echo >&2 "'$tmpfile' could not be moved to '$file'!"; exit 1; }
  done
    
  if ((verbose_)); then
    echo
    echo "$PRGNAME is installed."
		echo
    echo "To run $PRGNAME, enter 'dv2' or 'dejavu2'"
		echo
    echo "Contribute: Help develop and improve $PRGNAME."
    echo "  $REPOSITORY"
		echo
  fi
}

dv2.install "$@"

#fin
